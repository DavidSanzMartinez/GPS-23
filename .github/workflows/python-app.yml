name: Python CI Workflow

on:
  push:
    branches:
      - main  # Activar en push a la rama 'main'
  pull_request:
    branches:
      - main  # Activar en pull request hacia la rama 'main'

jobs:
  build:
    runs-on: ubuntu-latest  # Usar Ubuntu para el entorno

    steps:
    # 1. Checkout del código
    - name: Checkout code
      uses: actions/checkout@v2

    # 2. Configurar Docker y construir la imagen
    - name: Set up Docker for Python
      run: |
        docker build -t python-app .  # Construir la imagen Docker

    # 3. Instalar dependencias desde requirements.txt
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt  # Instalar dependencias de requirements.txt

    # 4. Ejecutar el análisis estático de código con pylint
    - name: Run pylint
      run: |
        pylint **/*.py  # Ejecutar pylint sobre todos los archivos Python del proyecto

    # 5. Ejecutar las pruebas y calcular la cobertura
    - name: Run tests with coverage
      run: |
        pip install pytest pytest-cov  # Instalar pytest y pytest-cov
        pytest --cov=transform tests/  # Ejecutar las pruebas y calcular la cobertura del módulo transform
